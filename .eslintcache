[{"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\index.tsx":"1","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\reportWebVitals.ts":"2","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\App.tsx":"3","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\Dashboard\\index.tsx":"4","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\styles\\GlobalStyle.ts":"5","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Layout\\index.tsx":"6","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Layout\\styles.ts":"7","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MainHeader\\index.tsx":"8","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MainHeader\\styles.ts":"9","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Content\\index.tsx":"10","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Aside\\index.tsx":"11","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Content\\styles.ts":"12","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Aside\\styles.ts":"13","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\themes\\dark.ts":"14","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\themes\\light.ts":"15","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\emojis.ts":"16","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Toggle\\index.tsx":"17","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Toggle\\styles.ts":"18","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\Dashboard\\styles.ts":"19","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\ContentHeader\\index.tsx":"20","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\ContentHeader\\styles.ts":"21","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SelectInput\\index.tsx":"22","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SelectInput\\styles.ts":"23","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\List\\index.tsx":"24","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\List\\styles.ts":"25","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryFinanceCard\\index.tsx":"26","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryFinanceCard\\styles.ts":"27","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\routes\\index.tsx":"28","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\routes\\app.routes.tsx":"29","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\repositories\\gains.ts":"30","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\repositories\\expenses.ts":"31","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\formatCurrency.ts":"32","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\formatDate.ts":"33","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\months.ts":"34","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\WalletBox\\index.tsx":"35","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\WalletBox\\styles.ts":"36","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MessageBox\\index.tsx":"37","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MessageBox\\styles.ts":"38","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\PieChart\\index.tsx":"39","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\PieChart\\styles.ts":"40","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryBox\\index.tsx":"41","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryBox\\styles.ts":"42","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\BarChartBox\\index.tsx":"43","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\BarChartBox\\styles.ts":"44","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\hooks\\theme.tsx":"45","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\routes\\auth.routes.tsx":"46","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\SignIn\\index.tsx":"47","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\SignIn\\styles.ts":"48","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Input\\index.tsx":"49","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Input\\styles.ts":"50","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SignInButton\\index.tsx":"51","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SignInButton\\styles.ts":"52","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\hooks\\auth.tsx":"53"},{"size":446,"mtime":1613077272619,"results":"54","hashOfConfig":"55"},{"size":425,"mtime":1607294260918,"results":"56","hashOfConfig":"55"},{"size":393,"mtime":1613078232482,"results":"57","hashOfConfig":"55"},{"size":9613,"mtime":1612971767258,"results":"58","hashOfConfig":"55"},{"size":442,"mtime":1612220282788,"results":"59","hashOfConfig":"55"},{"size":387,"mtime":1613045500388,"results":"60","hashOfConfig":"55"},{"size":253,"mtime":1612224652212,"results":"61","hashOfConfig":"55"},{"size":1078,"mtime":1613049833643,"results":"62","hashOfConfig":"55"},{"size":521,"mtime":1612295784251,"results":"63","hashOfConfig":"55"},{"size":209,"mtime":1613045347624,"results":"64","hashOfConfig":"55"},{"size":1035,"mtime":1613045306526,"results":"65","hashOfConfig":"55"},{"size":576,"mtime":1612395971561,"results":"66","hashOfConfig":"55"},{"size":1005,"mtime":1612306120307,"results":"67","hashOfConfig":"55"},{"size":335,"mtime":1612783051834,"results":"68","hashOfConfig":"55"},{"size":345,"mtime":1612783083487,"results":"69","hashOfConfig":"55"},{"size":123,"mtime":1612701702707,"results":"70","hashOfConfig":"55"},{"size":622,"mtime":1613049364324,"results":"71","hashOfConfig":"55"},{"size":513,"mtime":1612304599720,"results":"72","hashOfConfig":"55"},{"size":435,"mtime":1612970712174,"results":"73","hashOfConfig":"55"},{"size":575,"mtime":1613045442918,"results":"74","hashOfConfig":"55"},{"size":600,"mtime":1612381130579,"results":"75","hashOfConfig":"55"},{"size":788,"mtime":1613045808298,"results":"76","hashOfConfig":"55"},{"size":234,"mtime":1612378493386,"results":"77","hashOfConfig":"55"},{"size":5668,"mtime":1612960793524,"results":"78","hashOfConfig":"55"},{"size":1538,"mtime":1613059672954,"results":"79","hashOfConfig":"55"},{"size":604,"mtime":1613045455144,"results":"80","hashOfConfig":"55"},{"size":898,"mtime":1612568989926,"results":"81","hashOfConfig":"55"},{"size":421,"mtime":1613078190455,"results":"82","hashOfConfig":"55"},{"size":541,"mtime":1613078287671,"results":"83","hashOfConfig":"55"},{"size":2595,"mtime":1612885555246,"results":"84","hashOfConfig":"55"},{"size":12261,"mtime":1612887584809,"results":"85","hashOfConfig":"55"},{"size":239,"mtime":1612569618645,"results":"86","hashOfConfig":"55"},{"size":368,"mtime":1612569889182,"results":"87","hashOfConfig":"55"},{"size":239,"mtime":1612640243129,"results":"88","hashOfConfig":"55"},{"size":1246,"mtime":1612782743440,"results":"89","hashOfConfig":"55"},{"size":834,"mtime":1612782479046,"results":"90","hashOfConfig":"55"},{"size":608,"mtime":1613045543289,"results":"91","hashOfConfig":"55"},{"size":533,"mtime":1612734643281,"results":"92","hashOfConfig":"55"},{"size":1872,"mtime":1613045560285,"results":"93","hashOfConfig":"55"},{"size":1546,"mtime":1612800745805,"results":"94","hashOfConfig":"55"},{"size":2551,"mtime":1613045469517,"results":"95","hashOfConfig":"55"},{"size":1260,"mtime":1612886948463,"results":"96","hashOfConfig":"55"},{"size":2396,"mtime":1613045329073,"results":"97","hashOfConfig":"55"},{"size":2305,"mtime":1612970734582,"results":"98","hashOfConfig":"55"},{"size":1526,"mtime":1613055572107,"results":"99","hashOfConfig":"55"},{"size":341,"mtime":1613057416351,"results":"100","hashOfConfig":"55"},{"size":1401,"mtime":1613077593696,"results":"101","hashOfConfig":"55"},{"size":879,"mtime":1613059208077,"results":"102","hashOfConfig":"55"},{"size":300,"mtime":1613058576411,"results":"103","hashOfConfig":"55"},{"size":173,"mtime":1613058619564,"results":"104","hashOfConfig":"55"},{"size":279,"mtime":1613059523930,"results":"105","hashOfConfig":"55"},{"size":432,"mtime":1613059677986,"results":"106","hashOfConfig":"55"},{"size":1214,"mtime":1613076248307,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11iu04r",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\reportWebVitals.ts",[],["216","217"],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\App.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\Dashboard\\index.tsx",["218","219"],"import React, { useState, useMemo } from 'react';\r\n\r\nimport ContentHeader from '../../components/ContentHeader/index'\r\nimport SelectInput from '../../components/SelectInput'\r\nimport WalletBox from '../../components/WalletBox'\r\nimport MessageBox from '../../components/MessageBox'\r\nimport PieChart from '../../components/PieChart'\r\nimport HistoryBox from '../../components/HistoryBox'\r\nimport BarChartBox from '../../components/BarChartBox'\r\n\r\nimport months from '../../utils/months'\r\nimport gains from '../../repositories/gains'\r\nimport expenses from '../../repositories/expenses'\r\nimport happyImg from '../../assets/happy.svg'\r\nimport sadImg from '../../assets/sad.svg'\r\nimport grinningImg from '../../assets/grinning.svg'\r\n\r\nimport { Container, Content, BarChartContainer } from './styles'\r\n\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState<number>(new Date().getMonth() + 1)\r\n  const [selectedYear, setSelectedYear] = useState<number>(new Date().getFullYear())\r\n\r\n  const fillMonths = useMemo(() => {\r\n\r\n    return months.map((month, index) => {\r\n      return {\r\n        value: index + 1,\r\n        label: month\r\n      }\r\n    })\r\n\r\n  }, [])\r\n\r\n  const fillYears = useMemo(() => {\r\n\r\n    let uniqueYears: number[] = [];\r\n\r\n\r\n    [...expenses, ...gains].forEach(item => {\r\n      const date = new Date(item.date)\r\n      const year = date.getFullYear()\r\n      if (!uniqueYears.includes(year)) {\r\n        uniqueYears.push(year)\r\n      }\r\n    })\r\n\r\n\r\n    return uniqueYears.map(year => {\r\n      return {\r\n        value: year,\r\n        label: year\r\n      }\r\n    })\r\n\r\n  }, [])\r\n\r\n\r\n  const totalExpenses = useMemo(() => {\r\n\r\n    let total: number = 0;\r\n\r\n    expenses.forEach(item => {\r\n      const date = new Date(item.date);\r\n      const month = date.getMonth() + 1;\r\n      const year = date.getFullYear();\r\n\r\n      if (month === selectedMonth && year === selectedYear) {\r\n        try {\r\n          total += Number(item.amount)\r\n        } catch (error) {\r\n          throw new Error('Invalid amount! Amount must be a number')\r\n        }\r\n      }\r\n\r\n    })\r\n\r\n    return total;\r\n\r\n  }, [selectedYear, selectedMonth]);\r\n\r\n\r\n\r\n  const totalGains = useMemo(() => {\r\n\r\n    let total: number = 0;\r\n\r\n    gains.forEach(item => {\r\n\r\n      const date = new Date(item.date);\r\n      const month = date.getMonth() + 1;\r\n      const year = date.getFullYear();\r\n\r\n      if (selectedYear === year && selectedMonth === month) {\r\n        try {\r\n          total += Number(item.amount)\r\n        } catch {\r\n          throw new Error('Invalid amount. Gains must be a number.')\r\n        }\r\n      }\r\n    })\r\n\r\n    return total;\r\n\r\n  }, [selectedMonth, selectedYear]);\r\n\r\n\r\n  const totalBalance = useMemo(() => {\r\n\r\n    return totalGains - totalExpenses;\r\n\r\n  }, [totalExpenses, totalGains]);\r\n\r\n\r\n  const message = useMemo(() => {\r\n\r\n    if (totalBalance < 0) {\r\n      return {\r\n        title: 'Bad situation!',\r\n        description: 'Your wallet is negative.',\r\n        footerText: 'Consider cut unnecessary wastes.',\r\n        icon: sadImg\r\n      }\r\n    } else if (totalBalance === 0) {\r\n      return {\r\n        title: 'No data for this month!',\r\n        description: 'Your wallet is drawed.',\r\n        footerText: 'Your no has data from this month.',\r\n        icon: grinningImg\r\n      }\r\n    } else {\r\n      return {\r\n        title: 'God job!',\r\n        description: 'Your wallet is positive.',\r\n        footerText: 'Go on. Consider to invest your money.',\r\n        icon: happyImg\r\n      }\r\n    }\r\n\r\n  }, [totalBalance])\r\n\r\n  const calcRelations = useMemo(() => {\r\n\r\n    const totalRelations = totalExpenses + totalGains\r\n\r\n    const gainsPercent = ((totalGains / totalRelations) * 100).toFixed(1)\r\n    const expensesPercent = (((totalExpenses / totalRelations) * 100)).toFixed(1)\r\n\r\n    const data = [\r\n      {\r\n        name: 'Entrances',\r\n        value: 12,\r\n        percent: Number(gainsPercent),\r\n        color: '#22eeaa'\r\n      },\r\n      {\r\n        name: 'Budgets',\r\n        value: 12,\r\n        percent: Number(expensesPercent),\r\n        color: '#F7931B'\r\n      },\r\n    ]\r\n\r\n    return data\r\n\r\n  }, [totalExpenses, totalGains])\r\n\r\n\r\n  const historyData = useMemo(() => {\r\n    return months.map((_, monthIndex) => {\r\n\r\n      let amountEntry = 0;\r\n      gains.forEach((gain) => {\r\n        const date = new Date(gain.date);\r\n        const gainMonth = date.getMonth();\r\n        const gainYear = date.getFullYear();\r\n\r\n        if (gainMonth === monthIndex && gainYear === selectedYear) {\r\n          try {\r\n            amountEntry += Number(gain.amount);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n\r\n      })\r\n\r\n\r\n      let amountOutput = 0;\r\n      expenses.forEach((expense) => {\r\n        const date = new Date(expense.date);\r\n        const expenseMonth = date.getMonth();\r\n        const expenseYear = date.getFullYear();\r\n\r\n        if (expenseMonth === monthIndex && expenseYear === selectedYear) {\r\n          try {\r\n            amountOutput += Number(expense.amount);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n\r\n      })\r\n\r\n      return {\r\n        monthNumber: monthIndex,\r\n        month: months[monthIndex].substring(0, 3),\r\n        amountEntry,\r\n        amountOutput\r\n      }\r\n\r\n    }).filter(current => {\r\n      const currentMonth = new Date().getMonth();\r\n      const currentYear = new Date().getFullYear();\r\n\r\n      return (selectedYear === currentYear && current.monthNumber <= currentMonth || (selectedYear <= currentYear))\r\n\r\n    })\r\n\r\n\r\n  }, [selectedYear]);\r\n\r\n  const relationExpensivesRecurrentAndEventuals = useMemo(() => {\r\n\r\n    let amountRecurrent = 0;\r\n    let amountEventuals = 0;\r\n\r\n    expenses.filter(expense => {\r\n      const date = new Date(expense.date);\r\n      const month = date.getMonth() + 1;\r\n      const year = date.getFullYear();\r\n\r\n      return month === selectedMonth && year === selectedYear;\r\n\r\n    }).forEach((expense) => {\r\n\r\n      if (expense.frequency === 'recorrente') {\r\n        return amountRecurrent += Number(expense.amount)\r\n      }\r\n\r\n      if (expense.frequency === 'eventual') {\r\n        return amountEventuals += Number(expense.amount)\r\n      }\r\n\r\n\r\n    })\r\n\r\n    const total = amountRecurrent + amountEventuals\r\n\r\n    return [\r\n      {\r\n        name: 'Recurrents',\r\n        amount: amountRecurrent,\r\n        percent: Number((amountRecurrent / total) * 100),\r\n        color: '#4e41f0'\r\n      },\r\n      {\r\n        name: 'Eventuals',\r\n        amount: amountEventuals,\r\n        percent: Number((amountEventuals / total) * 100),\r\n        color: '#e44c4e'\r\n      },\r\n\r\n    ]\r\n\r\n\r\n  }, [selectedMonth, selectedYear])\r\n\r\n\r\n  const relationGainsRecurrentsAndEventuals = useMemo(() => {\r\n\r\n    let amountRecurrent = 0;\r\n    let amountEventuals = 0;\r\n\r\n    gains.filter(gain => {\r\n      const date = new Date(gain.date);\r\n      const month = date.getMonth() + 1;\r\n      const year = date.getFullYear();\r\n\r\n      return month === selectedMonth && year === selectedYear;\r\n\r\n    }).forEach((gain) => {\r\n\r\n      if (gain.frequency === 'recorrente') {\r\n        return amountRecurrent += Number(gain.amount)\r\n      }\r\n\r\n      if (gain.frequency === 'eventual') {\r\n        return amountEventuals += Number(gain.amount)\r\n      }\r\n\r\n\r\n    })\r\n\r\n    const total = amountRecurrent + amountEventuals\r\n\r\n    return [\r\n      {\r\n        name: 'Recurrents',\r\n        amount: amountRecurrent,\r\n        percent: Number((amountRecurrent / total) * 100),\r\n        color: '#4e41f0'\r\n      },\r\n      {\r\n        name: 'Eventuals',\r\n        amount: amountEventuals,\r\n        percent: Number((amountEventuals / total) * 100),\r\n        color: '#e44c4e'\r\n      },\r\n\r\n    ]\r\n\r\n\r\n  }, [selectedMonth, selectedYear])\r\n\r\n  return (\r\n    <Container>\r\n      <ContentHeader title='Dashboard' lineColor='#eeaa44'>\r\n        <SelectInput options={fillMonths}\r\n          onChange={(e) => { setSelectedMonth(Number(e.target.value)) }}\r\n          defaultValue={selectedMonth}\r\n        />\r\n        <SelectInput\r\n          options={fillYears} onChange={(e) => { setSelectedYear(Number(e.target.value)) }}\r\n          defaultValue={selectedYear}\r\n        />\r\n      </ContentHeader>\r\n      <Content>\r\n        <WalletBox\r\n          title='Balance'\r\n          amount={totalBalance}\r\n          footerLabel='Refresh by according your entrances and budgets.'\r\n          icon='dollar'\r\n          color='#6e03b5'\r\n        />\r\n        <WalletBox\r\n          title='Entrances'\r\n          amount={totalGains}\r\n          footerLabel='Here has your entrances total.'\r\n          icon='arrowUp'\r\n          color='#4ab503'\r\n        />\r\n\r\n        <WalletBox\r\n          title='Budgets'\r\n          amount={totalExpenses}\r\n          footerLabel='Here has your budgets total.'\r\n          icon='arrowDown'\r\n          color='#b53803'\r\n        />\r\n      </Content>\r\n      <Content>\r\n        <MessageBox\r\n          title={message.title}\r\n          description={message.description}\r\n          footerText={message.footerText}\r\n          icon={message.icon}\r\n        />\r\n        <PieChart\r\n          data={calcRelations}\r\n        />\r\n      </Content>\r\n      <HistoryBox\r\n        data={historyData}\r\n        lineColorAmountEntry='#4ab503'\r\n        lineColorAmountOutput='#b53803'\r\n      />\r\n      <BarChartContainer>\r\n        <BarChartBox\r\n          title='Entrances'\r\n          data={relationGainsRecurrentsAndEventuals}\r\n        />\r\n        <BarChartBox\r\n          title='Budgets'\r\n          data={relationExpensivesRecurrentAndEventuals}\r\n        />\r\n      </BarChartContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\styles\\GlobalStyle.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Layout\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Layout\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MainHeader\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MainHeader\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Content\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Aside\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Content\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Aside\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\themes\\dark.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\themes\\light.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\emojis.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Toggle\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Toggle\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\ContentHeader\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\ContentHeader\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SelectInput\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SelectInput\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\List\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\List\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryFinanceCard\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryFinanceCard\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\routes\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\routes\\app.routes.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\repositories\\gains.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\repositories\\expenses.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\formatCurrency.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\formatDate.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\utils\\months.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\WalletBox\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\WalletBox\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MessageBox\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\MessageBox\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\PieChart\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\PieChart\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryBox\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\HistoryBox\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\BarChartBox\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\BarChartBox\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\hooks\\theme.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\routes\\auth.routes.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Input\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\Input\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SignInButton\\index.tsx",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\components\\SignInButton\\styles.ts",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\my-wallet\\src\\hooks\\auth.tsx",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":218,"column":44,"nodeType":"226","messageId":"227","endLine":218,"endColumn":46},{"ruleId":"224","severity":1,"message":"225","line":218,"column":83,"nodeType":"226","messageId":"227","endLine":218,"endColumn":85},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]